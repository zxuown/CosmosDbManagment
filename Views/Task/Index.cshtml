@model List<CosmosDbManagment.Models.Task>

@{
    Layout = "_ManagmentLayout";
    int totalPages = ViewBag.TotalPages;
    int currentPage = ViewBag.CurrentPage;
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Tasks</h1>
        <a href="/task/create" class="btn btn-primary">Create Task</a>
    </div>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Start Date</th>
                <th>Due Date</th>
                <th>Status</th>
                <th>Project</th>
                <th>Assigned To</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Description</td>
                    <td>@item.CreatedDate.ToString("dd MMM yyyy")</td>
                    <td>@item.DueDate.ToString("dd MMM yyyy")</td>
                    <td>@item.Status</td>
                    <td>@item.ProjectId</td>
                    <td>@item.AssignedTo</td>
                    <td>
                        <a href="/task/edit/@item.Id" class="btn btn-sm btn-primary">Edit</a>
                        <button type="button" class="btn btn-sm btn-danger" onclick="deleteTask('@item.Id')">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav aria-label="Page navigation">
        <ul class="pagination">
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = i })">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>

<script>
    function deleteTask(taskId) {
        if (confirm('Are you sure you want to delete this task?')) {
            fetch(`/task/delete/${taskId}`, {
                method: 'DELETE'
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    location.reload();
                    return response.json();
                })
        }
    }
</script>
